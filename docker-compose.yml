version: '3.3'
services:
    docker-ripper:
        container_name: Ripper
        #build: # optional - use this if you want to build the image yourself
        #   dockerfile: latest/Dockerfile # this uses the repo version of makemkvcon
        #   dockerfile: manual-build/Dockerfile # this will build makeMKV from source - this takes a long time but will always be the latest version
        image: rix1337/docker-ripper:latest 
        volumes:
            #- ./ripper-config:/config:rw # optional - path to the config folder - if not provided, a default config will be used
            - ./ripper-output:/out:rw
        devices:
            - /dev/sr0:/dev/sr0
            - /dev/sg0:/dev/sg0
        ports:
            - 9090:9090 
        environment:
            - SEPARATERAWFINISH=true # optional - true/false - separate the raw files from the finished files
            - EJECTENABLED=true # optional - true/false - eject the disc when finished
            - STORAGE_CD=/out/Ripper/CD # optional - path to the storage folder for CD rips - should be to a folder in the mounted /out volume
            - STORAGE_DVD=/out/Ripper/DVD # optional - path to the storage folder for DVD rips - should be to a folder in the mounted /out volume
            - STORAGE_BD=/out/Ripper/BluRay # optional - path to the storage folder for BD rips - should be to a folder in the mounted /out volume
            - STORAGE_DATA=/out/Ripper/Data # optional - path to the storage folder for Data rips - should be to a folder in the mounted /out volume
            - DRIVE=/dev/sr0 # optional - path to the optical drive - should be to the mounted /dev/sr0 device
            - JUSTMAKEISO=false # optional - true/false just making an ISO of any disc
            - ALSOMAKEISO=false # optional - true/false - will do the normal rip and also make an ISO of every disc
            - TIMESTAMPPREFIX=false # optional - true/false - prefix the output folder with a timestamp
            - DEBUG=false # optional - true/false - enable debug logging
            - DEBUGTOWEB=false # optional - true/false - enable debug logging to the web ui
            - MINIMUMLENGTH=600 # optional - minimum length of the disc in seconds - if the disc or chapter is shorter than this, it will not be ripped
            - FILEUSER=nobody # optional - defines the user ownership of created files
            - FILEUSERID=321 # optional - use along with FILEUSER to specify user id of created files
            - FILEGROUP=users # optional - defines the group ownership of created files
            - FILEGROUPID=4321 # optional - use along with FILEGROUP to specify group id of created files
            - FILEMODE=g+rw # optional - defines the permissions set on created files
            
            #    - KEY=T-eX4mpl3FoQCIORraCfuH3X@qEyMjXXCduqtd8xNt4rjNRZf3Y2BRrIlJqxODbBo@KTW # optional - an officially purchased MakeMKV license key
            #    - PREFIX=OPTIONAL_WEB_UI_PATH_PREFIX # optional - path prefix for the integrated web ui when commented out or set to /, the web ui will be at the root of the server
            #    - USER=OPTIONAL_WEB_UI_USERNAME # optional - user name for the integrated web ui (requires PASS to be set) - if not set, the web ui will not require authentication
            #    - PASS=OPTIONAL_WEB_UI_PASSWORD # optional - password for the integrated web ui (requires USER to be set) - if not set, the web ui will not require authentication
            
            # Notification System Configuration (uncomment and configure as needed)
            #- NOTIFY_ENABLED=true # Enable the notification system
            #- NOTIFY_PROVIDER=discord # Options: discord, pushover, webhook
            
            # Discord Configuration
            #- NOTIFY_DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your/webhook/url
            
            # Pushover Configuration
            #- NOTIFY_PUSHOVER_API_TOKEN=your_api_token
            #- NOTIFY_PUSHOVER_USER_KEY=your_user_key
            #- NOTIFY_PUSHOVER_DEVICE=optional_device_name
            #- NOTIFY_PUSHOVER_PRIORITY=0 # -2 to 2 (emergency=2 requires retry and expire params)
            #- NOTIFY_PUSHOVER_SOUND=pushover # sound name (default: pushover)
            
            # Generic Webhook Configuration
            #- NOTIFY_WEBHOOK_URL=https://your-webhook-endpoint.com
            #- NOTIFY_WEBHOOK_METHOD=POST # HTTP method (GET, POST, PUT, etc.)
            #- NOTIFY_WEBHOOK_HEADERS={"Content-Type": "application/json", "Authorization": "Bearer token"}
        
        privileged: true
